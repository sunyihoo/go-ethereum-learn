// Copyright 2014 The go-ethereum Authors
// This file is part of the go-ethereum library.
//
// The go-ethereum library is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// The go-ethereum library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with the go-ethereum library. If not, see <http://www.gnu.org/licenses/>.

package types

import (
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/common/hexutil"
)

//go:generate go run ../../rlp/rlpgen -type Log -out gen_log_rlp.go
//go:generate go run github.com/fjl/gencodec -type Log -field-override logMarshaling -out gen_log_json.go

// Log represents a contract log event. These events are generated by the LOG opcode and
// stored/indexed by the node.
//
// Log 表示合约日志事件。这些事件由 LOG 操作码生成，并由节点存储和索引。
// 仅 Address, Topics, Data 参与 RLP 编码，与以太坊协议一致
//
// 表示智能合约事件日志，分为共识字段（上链）和派生字段（本地）。
// 由节点存储和索引，支持事件查询（如 eth_getLogs）。
//
//	LOG操作码: 以太坊 EVM 的 LOG0 到 LOG4 操作码生成日志，主题数从 0 到 4
//	链重组: Removed 表示日志因分叉被移除，过滤查询需检查此字段。
//	索引: Topics 用于高效事件过滤，Data 存储额外信息。
type Log struct {
	// Consensus fields: 共识字段 这些字段由区块链共识保证，存储在区块中，RLP 编码时包含
	// address of the contract that generated the event
	// 生成事件的合约地址；生成日志的合约地址。
	Address common.Address `json:"address" gencodec:"required"`
	// list of topics provided by the contract.
	// 合约提供的主题列表，用于事件索引和过滤。 通常第一个主题是事件签名哈希，其余是索引参数
	Topics []common.Hash `json:"topics" gencodec:"required"`
	// supplied by the contract, usually ABI-encoded
	// 由合约提供，通常是 ABI 编码的
	Data []byte `json:"data" gencodec:"required"`

	// Derived fields. These fields are filled in by the node
	// but not secured by consensus. 这些字段由节点填充，不受共识保护，RLP 编码时忽略（rlp:"-"）。
	// block in which the transaction was included
	// 交易包含的区块
	BlockNumber uint64 `json:"blockNumber" rlp:"-"`
	// hash of the transaction
	// 交易的哈希
	TxHash common.Hash `json:"transactionHash" gencodec:"required" rlp:"-"`
	// index of the transaction in the block
	// 区块中交易的索引
	TxIndex uint `json:"transactionIndex" rlp:"-"`
	// hash of the block in which the transaction was included
	// 交易包含的区块哈希
	BlockHash common.Hash `json:"blockHash" rlp:"-"`
	// index of the log in the block
	// 区块中日志的索引
	Index uint `json:"logIndex" rlp:"-"`

	// The Removed field is true if this log was reverted due to a chain reorganisation.
	// You must pay attention to this field if you receive logs through a filter query.
	// 如果由于链重组而回滚此日志，则 Removed 字段为 true。如果通过过滤查询接收日志，必须注意此字段。
	Removed bool `json:"removed" rlp:"-"`
}

// 辅助 Log 的 JSON 序列化，提供自定义格式。
type logMarshaling struct {
	Data        hexutil.Bytes
	BlockNumber hexutil.Uint64
	TxIndex     hexutil.Uint
	Index       hexutil.Uint
}
